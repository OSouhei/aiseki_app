# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: circleci/ruby:2.6.6-node-browsers-legacy
        environment:
          RAILS_ENV: test
          BUNDLER_VERSION: 1.17.2
          POSTGRES_HOST: 127.0.0.1
      - image: circleci/mysql:8.0.23-ram
        environment:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_USER: user
          MYSQL_DATABASE: myapp_test
          MYSQL_PASSWORD: password

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            gem install bundler -v 1.17.2
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
          - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      - restore_cache:
          keys:
            - rails-demo-yarn-{{ checksum "yarn.lock" }}
            - rails-demo-yarn-

      - run:
          name: install yarn
          command: yarn install --cache-folder ~/.cache/yarn

      - save_cache:
          key: rails-demo-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      # Database setup
      - run: rm ./config/database.yml

      - run:
          name: setup mysql
          command: |
            for i in `seq 1 10`;
            do
              nc -z 127.0.0.1 3306 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for MySQL && exit 1
      - run:
          name: install  MySQL CLI
          command: |
            sudo apt-get install default-mysql-client
            mysql -h 127.0.0.1 -u user -p password myapp_test < sql-data/dummy.sql
            mysql -h 127.0.0.1 -u user -p password --execute="SELECT * FROM myapp_test.Persons"

      - run: mv ./config/database.yml.ci ./config/database.yml

      - run:
          name: Prepare db
          command: |
            bundle exec rake db:create db:schema:load --trace

      # run rubocop
      - run:
          name: Rubocop
          command: bundle exec rubocop

      # run test!
      - run:
          name: Rspec
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"
            bundle exec rspec --format progress --color --format documentation

      # collect reports
      - store_test_results:
          path: /tmp/test-results

      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

      - deploy:
          name: Deploy to HEROKU
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master
            fi
